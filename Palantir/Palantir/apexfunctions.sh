#BEGINAPEXGENERICSETUP
#
#   This section is automatically generated by the utility ApexSDSetup.
#   DO NOT edit this section. Re-run the setup utility as necessary.
#
#    Optional user-configurable features:
#    -- Add the following before the #BEGINAPEXGENERICSETUP marker in ~/.bash_profile --
#    -- or $MS_USER_ROOT/profile.bash                                                 --
#    1. To automatically load your user configuration overrides on changeEnlistment, implement a function (v1.1)
#        function onChangeEnlistmentUserSetup()
#        {
#            --- user setup commands ---
#        }
#    2. To avoid auto loading the first enlistment entry from the ~/.enlistments.plist in new terminal windows (v1.2)
#          export MS_DONT_AUTO_LOAD_DEFAULT_ENLISTMENT=1
#      To later load the first enlistment, type changeEnlistment 0
#   3. Customizations can be put in $MS_USER_ROOT/profile.bash instead of ~/.bash_profile (v1.3)

function listEnlistments()
{
    ENLISTMENT_PLIST="/Users/$USER/.enlistments.plist";
    DICT_LEVEL=0;
    while read ONE_LINE; do

        if test "$ONE_LINE" = "<dict>"; then
            DICT_LEVEL=$(expr $DICT_LEVEL + 1);
        elif test "$ONE_LINE" = "</dict>"; then
            DICT_LEVEL=$(expr $DICT_LEVEL - 1);
        elif test $DICT_LEVEL -eq 1; then
            echo ${ONE_LINE} | sed -e "s/<key>//g" -e "s/<\/key>//g"
        fi;

    done < "$ENLISTMENT_PLIST";
}

# Test if a version number is greater that another (1.10 > 1.9 > 1.1, or 2.2.30 > 2.2.4) and can handle up to 2 digits in a segment
# http://stackoverflow.com/questions/16989598/bash-comparing-version-numbers
# http://stackoverflow.com/questions/21394536/how-to-simulate-sort-v-on-mac-osx
function version_gt()
{
    test  "$(echo "$@" | tr " " "\n" | sed 's/^[0-9]\./0&/; s/\.\([0-9]\)$/.0\1/; s/\.\([0-9]\)\./.0\1./g; s/\.\([0-9]\)\./.0\1./g' | sort | sed 's/^0// ; s/\.0/./g' | head -n 1)" != "$1";
}

function findBestApexSetupBash()
{
    maxVersionBashPath=""
    maxVersion="-1"
    listEnlistmentsResult=$(listEnlistments);
    ENLISTMENT_PLIST="/Users/$USER/.enlistments.plist";

    while read line ; do
        MS_TOOLS_ROOT=$(/usr/libexec/PlistBuddy -c "Print :$line:MS_TOOLS_ROOT" $ENLISTMENT_PLIST 2>/dev/null)

        # User depot enlistments don't have an associated MS_TOOLS_ROOT so we can skip them
        if [ "$MS_TOOLS_ROOT" ]; then
            # apexsetup.bash path varies by branch
            potentialApexSetupBashPaths=("$MS_TOOLS_ROOT/mbu/scripts/apexsetup.bash" "$MS_TOOLS_ROOT/../scripts/apexsetup.bash")

            for potentialApexSetupBashPath in ${potentialApexSetupBashPaths[@]}; do
                if [ -f "$potentialApexSetupBashPath" ]; then
                    version=$(head -n 1 "$potentialApexSetupBashPath" | sed 's/[^0-9.]*//g');

                    if version_gt $version $maxVersion; then
                        maxVersion=$version
                        maxVersionBashPath=$potentialApexSetupBashPath
                    fi
                fi
            done
        fi
    done <<< "$listEnlistmentsResult"

    if [[ "$maxVersion" != "-1" ]]; then
        echo "$maxVersionBashPath";
    fi
}

bestBash=$(findBestApexSetupBash);
echo "Loading ApexSetup.bash from $bestBash";
source "$bestBash"

export -f findBestApexSetupBash

#ENDAPEXGENERICSETUP
